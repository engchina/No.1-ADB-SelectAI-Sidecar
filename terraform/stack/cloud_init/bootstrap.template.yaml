#cloud-config
output: {all: '| tee -a /var/log/cloud-init-custom.log'}
bootcmd:
  - echo "Starting boot command..."
  - mkdir -p /u01/aipoc/props
  # Wait for network connectivity before proceeding
  - until ping -c1 archive.ubuntu.com &>/dev/null; do sleep 2; done
write_files:
  - path: "/u01/aipoc/props/bucket_name.txt"
    permissions: "0644"
    content: |
      ${bucket_name}
  - path: "/u01/aipoc/props/bucket_namespace.txt"
    permissions: "0644"
    content: |
      ${bucket_namespace}
  - path: "/u01/aipoc/props/bucket_region.txt"
    permissions: "0644"
    content: |
      ${bucket_region}
  - path: "/u01/aipoc/props/oci_access_key.txt"
    permissions: "0644"
    content: |
      ${oci_access_key}
  - path: "/u01/aipoc/props/oci_secret_key.txt"
    permissions: "0644"
    content: |
      ${oci_secret_key}
  - path: "/u01/aipoc/props/wallet.zip"
    permissions: "0644"
    encoding: base64
    content: |
      ${oci_database_autonomous_database_wallet_content}
  - path: "/u01/aipoc/props/db_password.txt"
    permissions: "0644"
    content: ${oci_database_autonomous_database_password}
  - path: "/u01/aipoc/props/adb_dsn.txt"
    permissions: "0644"
    content: ${oci_database_autonomous_database_dsn}
  - path: "/u01/aipoc/props/wallet_password.txt"
    permissions: "0644"
    content: ${oci_database_autonomous_database_password}
  - path: "/u01/aipoc/props/dify_branch.txt"
    permissions: "0644"
    content: |
      ${dify_branch}
  - path: "/u01/aipoc/props/mysql_hostname.txt"
    permissions: "0644"
    content: |
      ${mysql_hostname}
  - path: "/u01/aipoc/props/mysql_password.txt"
    permissions: "0644"
    content: |
      ${mysql_password}
  - path: "/u01/aipoc/props/postgresql_hostname.txt"
    permissions: "0644"
    content: |
      ${postgresql_hostname}
  - path: "/u01/aipoc/props/postgresql_password.txt"
    permissions: "0644"
    content: |
      ${postgresql_password}
runcmd:
  # Wait for system to fully initialize
  - echo "Waiting for system initialization..."
  - sleep 30
  # Stop any conflicting package management services
  - systemctl is-active --quiet apt-daily.service && systemctl stop apt-daily.service || true
  - systemctl is-active --quiet apt-daily-upgrade.service && systemctl stop apt-daily-upgrade.service || true
  - systemctl is-active --quiet unattended-upgrades.service && systemctl stop unattended-upgrades.service || true
  # Install required packages with retry mechanism
  - echo "Installing required packages..."
  - apt-get update || (sleep 10 && apt-get update) || echo "Package update failed, continuing..."
  - DEBIAN_FRONTEND=noninteractive apt-get install -y git unzip curl ca-certificates || echo "Some packages failed to install, continuing..."
  # Verify critical packages are available
  - which git || (echo "Git not found, attempting alternative installation..." && snap install git --classic) || echo "Git installation failed"
  - which curl || echo "Curl not available, some features may not work"
  - echo "Running aidify init..."
  - iptables -I INPUT 6 -m state --state NEW -p tcp --dport 8080 -j ACCEPT
  - iptables -I INPUT 7 -m state --state NEW -p tcp --dport 5001 -j ACCEPT
  - iptables -I INPUT 8 -m state --state NEW -p tcp --dport 3100 -j ACCEPT
  - netfilter-persistent save
  - echo "Downloading and running init script..."
  - cd /u01/aipoc
  - git clone -b main https://github.com/engchina/No.1-ADB-SelectAI-Sidecar.git; cd No.1-ADB-SelectAI-Sidecar
  - nohup bash init_script.sh >> /var/log/cloud-init-custom.log 2>&1 &
